#!/bin/bash

source ~/rosie/rosenv.gazebo.bash

set -xv

source ~/rosie/entry

cd ~/ws_baxter
#HOSTNAME=`hostname`
#HOSTNAME=127.0.0.1
#export ROS_IP=${HOSTNAME}.vx.rmit.edu.au
#export ROS_IP=${HOSTNAME}
#export ROS_MASTER_URI=http://${HOSTNAME}.vx.rmit.edu.au:11311
#export ROS_MASTER_URI=http://${HOSTNAME}:11311

export MB_LASER_BIRDCAGE_R2000=1
export MB_LASER_BIRDCAGE_R2000_FREQ=50
export MB_LASER_BIRDCAGE_R2000_SAMPLES=3600

~/rosie/installconfig

#{ sleep 3 ; tail -f ~/.ros/log/latest/* ; sleep 10; /root/rosie/checkconfig ; } &

# triggered by /rosout_agg.function == "GazeboRosVideo::Load"

exitscript=false

function cleanup()
{
    while kill -INT $ROS_PID; do 
      echo "**** simstart: cleanup PID $ROS_PID ****"
      sleep 5
    done
    exitscript=true
    echo "**** simstart: exit ****"
    exit
}
trap cleanup EXIT SIGINT SIGTERM

#export LIBGL_ALWAYS_INDIRECT=0
export QT_X11_NO_MITSHM=1
roslaunch ~/rosie/vxlab_sim.launch baxter:=true paused:=true &
ROS_PID=$!
echo "**** roslaunch PID is $ROS_PID ****"

# await Simulator load
# await "GazeboRosVideo ... has started"
~/rosie/await_video_ready.py || cleanup
echo "**** prepsim: await_simstart succeeded ****"

~/rosie/check-config

echo "Tucking arms..."
~/rosie/tuck_presim

echo "Spawning objects..."
~/rosie/table_spawn
~/rosie/markerspawn

echo "Unpausing..."
rosservice call gazebo/unpause_physics

~/rosie/await_simulator_is_loaded.py || cleanup

rostopic pub /rosie_events std_msgs/String 'Rosie Sim Started' -1

~/rosie/untuck

# center head
~/rosie/headcentre &

#date > packages.log
#./aptlist >> packages.log

#sleep 30
#gzclient &
#rviz &

while true
do
  sleep 60 || cleanup
done
